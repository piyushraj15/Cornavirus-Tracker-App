{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Card.jsx","api/index.js","components/Chart/Chart.jsx","components/Country/Country.jsx","App.js","index.js","App.module.css","images/imagecovid.jpg","components/Chart/Chart.module.css","components/Country/Country.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","value","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varient","start","end","duration","separator","Date","toDateString","url","getData","country","a","newUrl","axios","get","fetchDailyData","newdata","map","dailydata","total","date","reportDate","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Country","handleCountryChange","getCountries","setFetchedCountries","fetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","Component","state","fetchedData","setState","componentDidMount","render","image","alt","src","this","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.769bf01d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__JXXyS\",\"card\":\"Cards_card__2T7Ru\",\"infected\":\"Cards_infected__1X_QV\",\"recovered\":\"Cards_recovered__1j8VM\",\"deaths\":\"Cards_deaths__3l55n\"};","import React from 'react'\r\n\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\n\r\nimport styles from './Cards.module.css'\r\nimport cx from 'classnames'\r\nimport CountUp from 'react-countup'\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n\r\n        \r\n    if(!confirmed){\r\n        return \"Loading...\"\r\n    }\r\n    else{\r\n    console.log(confirmed.value)\r\n    return (\r\n        <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n            <Grid item component={Card} xs={8} md={3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography varient=\"h5\">\r\n                        <CountUp start={0}\r\n                        end={confirmed.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography varient=\"body2\">Number of active cases of COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={8} md={3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography varient=\"h5\">\r\n                    <CountUp start={0}\r\n                        end={recovered.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography varient=\"body2\">Number of Recovered cases of COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            <Grid item component={Card} xs={8} md={3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Death</Typography>\r\n                    <Typography varient=\"h5\">\r\n                    <CountUp start={0}\r\n                        end={deaths.value}\r\n                        duration={2.5}\r\n                        separator=\",\"\r\n                        />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography varient=\"body2\">Number of Death cases of COVID-19</Typography>\r\n                </CardContent>\r\n            </Grid>\r\n        </Grid>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Cards","import axios from 'axios'\r\nimport { useEffect } from 'react'\r\n\r\nconst url=\" https://covid19.mathdro.id/api\"\r\n\r\nexport const getData = async (country) => {\r\n  let newUrl=url\r\n  console.log(country, \"in nget\")\r\n\r\n  if(country){\r\n    newUrl= `${url}/countries/${country}`\r\n  }\r\n  try{\r\n      const { data :{confirmed , recovered, deaths, lastUpdate} }= await axios.get(newUrl)\r\n\r\n      return {confirmed , recovered, deaths, lastUpdate}\r\n\r\n  }\r\n  catch(err){\r\n      \r\n  }\r\n}\r\n\r\nexport const fetchDailyData= async() =>{\r\n\r\n  try{\r\n    const { data } =  await axios.get(`${url}/daily`);\r\n\r\n    const newdata= data.map((dailydata)=>({\r\n      confirmed:dailydata.confirmed.total,\r\n      deaths:dailydata.deaths.total,\r\n      date:dailydata.reportDate,\r\n    }));\r\n\r\n    \r\n    return newdata\r\n  } catch(error){\r\n\r\n  }\r\n\r\n}\r\n\r\nexport const countries=async()=>{\r\n  try{\r\n    const {data:{countries}}= await axios.get(`${url}/countries`)\r\n    return countries.map((country)=>country.name)\r\n  }\r\n\r\n  catch(err){\r\n\r\n  }\r\n}\r\n\r\n","import React, {useState,useEffect} from 'react'\r\n\r\nimport {fetchDailyData} from '../../api'\r\n\r\nimport {Line, Bar } from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart=({data:{confirmed,recovered,deaths},country})=>{\r\n\r\n    const [dailyData, setDailyData]= useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        const fetchAPI = async () =>{\r\n            setDailyData( await fetchDailyData());\r\n        }\r\n        \r\n\r\n        fetchAPI();\r\n\r\n        \r\n    },[]);\r\n\r\n\r\nconst lineChart =(\r\n    (dailyData.length)\r\n    ?(\r\n    <Line\r\n    data={{\r\n        labels:dailyData.map(({date})=>date),\r\n        datasets:[{\r\n            data:dailyData.map(({confirmed})=>confirmed),\r\n            label:\"Infected\",\r\n            borderColor:\"#3333ff\",\r\n            fill:true,\r\n        },{\r\n            data:dailyData.map(({deaths})=>deaths),\r\n            label:\"deaths\",\r\n            borderColor:\"red\",\r\n            backgroundColor:'rgba(255,0,0,0.5)',\r\n            fill:true,\r\n        }],\r\n    }}/>):null\r\n    \r\n)\r\n\r\nconst barChart=(\r\n    confirmed ?(\r\n        <Bar\r\n        data={{\r\n            labels:['Infected', 'Recovered', 'Deaths'],\r\n            datasets:[{\r\n               label:\"Person\",\r\n               backgroundColor:[\"blue\",\"greenyellow\",\"red\"],\r\n               data:[confirmed.value,recovered.value,deaths.value]\r\n\r\n\r\n            }]\r\n        }}\r\n        options={{\r\n            legend: {display:false},\r\n            title:{display:true, text:`Current state is ${country}`}\r\n        }}\r\n        />\r\n    ):null\r\n\r\n)\r\n\r\n    return (\r\n     <div className={styles.container}>\r\n        {country ? barChart: lineChart}  \r\n     </div>   \r\n    )\r\n}\r\n\r\nexport default Chart","import React,{useEffect,useState} from 'react'\r\n\r\nimport {NativeSelect, FormControl} from '@material-ui/core' \r\n\r\nimport styles from './Country.module.css'\r\n\r\nimport {countries} from '../../api'\r\nconst Country=({ handleCountryChange })=>{\r\n    \r\n    \r\n        const [getCountries, setFetchedCountries]= useState([]);\r\n      \r\n        useEffect(()=>{\r\n          const fetchCountries = async()=>{\r\n          \r\n            setFetchedCountries( await countries());\r\n          }\r\n          fetchCountries();\r\n        },[setFetchedCountries])\r\n\r\n        console.log(getCountries)\r\n      \r\n      \r\n\r\n    return (\r\n    <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\" \" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n            <option value=\"\">Global</option>\r\n            {getCountries.map((country,i)=>(<option key={i}value={country}>{country}</option>))}\r\n        </NativeSelect>\r\n    </FormControl>\r\n    )\r\n}\r\n\r\nexport default Country","import React, { Component } from 'react';\n\nimport styles from './App.module.css';\n\nimport Axios from 'axios'\n\nimport image from './images/imagecovid.jpg'\n\n\nimport {Cards ,Chart ,Country} from './components'\n\nimport {getData} from './api'\n\n\n\nconst url=\" https://covid19.mathdro.id/api\"\n\nclass App extends Component {\n  \n  state={\n    data:{},\n    country:\"\"\n  }\n\n  async componentDidMount(){\n\n    const data = await getData();\n\n    this.setState({data:data})\n  }\n\n   handleCountryChange=async(country)=>{\n    console.log(country)  \n    const fetchedData= await getData(country);\n    console.log(fetchedData)\n    this.setState({data:fetchedData,country:country});\n  }\n  \n  \n  render() {\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} alt=\"covid-19\" src={image}/>\n        <Cards data={this.state.data}/>\n        <Country handleCountryChange={this.handleCountryChange}/>\n        <Chart data={this.state.data} country={this.state.country}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__32rhh\",\"image\":\"App_image__2eB1C\"};","module.exports = __webpack_public_path__ + \"static/media/imagecovid.b261db91.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2iq9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Country_formControl__ESqic\"};"],"sourceRoot":""}